version: '3.8'

services:
  docker-oauth:
    depends_on:
      - postgres
    build:
      context: .  # This should point to the directory containing your Dockerfile
      dockerfile: Dockerfile  # Specify the name of your Dockerfile
    container_name: oauth-container
    hostname: docker-oauth
    networks:
      - mynet
    ports:
      - 8080:8080
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      OAUTH_DEBUG: ${OAUTH_DEBUG}
      OAUTH_DB_USER: ${OAUTH_DB_USER}
      OAUTH_DB_PORT: ${OAUTH_DB_PORT}
      OAUTH_DB_PASSWORD: ${OAUTH_DB_PASSWORD}
      OAUTH_DB_DATABASE: ${OAUTH_DB_DATABASE}
      OAUTH_ACCEPTED_VERSIONS: ${OAUTH_ACCEPTED_VERSIONS}
      OAUTH_DB_SCHEMA: ${OAUTH_DB_SCHEMA}
      OAUTH_DB_HOST: ${OAUTH_DB_HOST}
      OAUTH_ENCRYPTION_KEY: ${OAUTH_ENCRYPTION_KEY}
      OAUTH_JWT_KEY: ${OAUTH_JWT_KEY}
      OAUTH_LOGGER_SECRET: ${OAUTH_LOGGER_SECRET}
      OAUTH_LOGGER_SERVICE_URL: ${OAUTH_LOGGER_SERVICE_URL}
      OAUTH_MEMBER_SERVICE_URL: ${OAUTH_MEMBER_SERVICE_URL}
      OAUTH_SERVICE_URL: ${OAUTH_SERVICE_URL}
    deploy:
      restart_policy:
        condition: on-failure
    
  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    networks:
      - mynet
    ports:
      - 5434:5432
    environment:
      POSTGRES_DB: ${OAUTH_DB_DATABASE}
      POSTGRES_USER: ${OAUTH_DB_USER}
      POSTGRES_PASSWORD: ${OAUTH_DB_PASSWORD}  # Specify the superuser password here

volumes:
   postgres_data:

networks:
  mynet:
    driver: bridge
